# Generated by Django 5.1.3 on 2025-03-10 10:25

import apps.tasks.choices.priority
import apps.tasks.choices.statuses
import apps.tasks.utils.set_end_of_month
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_projectfile_project_files'),
        ('tasks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('New', 'NEW'), ('In Progress', 'IN_PROGRES'), ('Completed', 'COMPLETED'), ('Closed', 'CLOSED'), ('Pending', 'PENDING'), ('Blocked', 'BLOCKED')], default=apps.tasks.choices.statuses.StatusEnum['NEW'], max_length=11)),
                ('priority', models.CharField(choices=[('Low', 'LOW'), ('Medium', 'MEDIUM'), ('High', 'HIGH'), ('Critical', 'CRITICAL')], default=apps.tasks.choices.priority.PriorityEnum['MEDIUM'], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deadline', models.DateTimeField(default=apps.tasks.utils.set_end_of_month.calculate_end_of_month)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('assignee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='task', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='projects.project')),
                ('tag', models.ManyToManyField(blank=True, related_name='tasks', to='tasks.tag')),
            ],
            options={
                'ordering': ['-deadline', 'assignee'],
                'unique_together': {('project', 'title')},
            },
        ),
    ]
